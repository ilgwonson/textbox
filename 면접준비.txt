


1. 웹싸이트 최적화
    ㄱ. 페이지가 로드 되면서 렌더트리가 생성될때 css가 필요 하므로 css 를 헤더위에 넣고, script를 body 안 최 하단에 넣어서 스크립트 로딩으로 인한 페이지 로딩 지연을 줄인다.
    ㄴ. 렌더링 엔진(html + css layout javascript dom binding)
    ㄷ. translate,opacity,scale,rotate등의 변경은 composite layer 단계만 다시 수정하므로 속도가 빠르고 하드웨어 가속을 사용할수 있음
    ㄹ. 사용자에게 화면을 보여 주기 전에 렌더 트리를 생성해야 하는데, 이때 스타일시트 파일이 반드시 필요하다. 스타일시트 파일을 최대한 빨리 다운로드해야 하는 이유다.
    ㅁ. sprite이미지 사용하기(하지만 전 회사에서는 사용안하기도 했음 디자이너 편의를 위해)

    ㅂ. grunt와 inject를 사용하여 js파일과 css 파일을 minify한후 하나의 파일로 inject하였슴.
    ㅅ. 실험적으로 minifest와 구글에서 만든 amp를 사용해보았다.

    ㅇ. 반복문의 조건식에 length를 변수에 저장
    ㅈ. 스코프 체인에서 탐색을 줄이기 위해 외부 전역 변수나 상위 스코프 변수를 변수에 저장
    ㅇ. 스크립트로 dom을 수정할경우 렌더링과정이 반복되니 최종본이 나오니기 전까지 display:none이나 노드를 복사하여 수정하여서 기존꺼를 대체 하는 식으로 한다.
    ㅈ. 이벤트 위임 부모에게 이벤트를 줘서 자식들을 처리함


    ㅇ. CDN(Content Delivery Network)은 접속하는 사용자의 위치에 따라서 응답이 빠른 서버로 접속하여 필요한 파일들을 호출하는 것을 말한다.





http://mylko72.maru.net/jquerylab/pattern/javascript.optimize.html?hn=3&sn=2

    스타일 변경으로 reflow가 발생하면 render tree가 재구축되면 repaint가 일어난다.
    reflow 발생 원인
        - 윈도우 Resize
        - font변경
        - style 추가나 삭제
        - element 추가나 삭제, 위치 변경, 크기 변경

    minifest 사용해봤는데 외부에서 불러오는 script가 많아서 사용 안함



    ㅊ. 브라우저 동작을 기반으로 한 최적화 http://mylko72.maru.net/jquerylab/pattern/javascript.optimize.html?hn=3&sn=2


    HTTP 요청 최소화
    스크립트 최적화
    IE에서는 nextSibling이 childNodes보다 훨씬 빨리 실행된다. 구형버전의 IE를 지원해야 하고 성능이 중요할 때는 아래와 같이 nextSibling을 써야 한다.
    innerHTML vs DOM 메서드 - 별차이 없지만 최신브라우저는 dom메서드가 더 빠름
    style.boderLeft같은 속성 말고 .style.cssText를 활용
    - 요소를 숨기고 변경한 후 다시 드러낸다.
    - 현재 DOM 바깥에서 문서 조각을 만들어 변경한 후 문서에 복사한다.
    - 현재 요소를 문서 밖의 노드에 복사해서 사본을 변경한 후 원래 요소를 대체한다.
    다음 예는 링크 목록에 객체에 있는 데이터를 추가하는 예이다.
    이벤트 위임이란 부모요소에 핸들러를 하나 붙여서 모든 자식 요소에서 발생하는 이벤트를 처리하도록 하는 것이다. Dom 노드를 많이 수정할수록 애플리케이션은 느려진다.
    반복문에서 length 변수 만들어 저장하여 한번만 접근하기






    - 오픈소스 경험 있는가?
        개인적으로 만든 hashtag editor가 있습니다. 구글 플러스 커뮤니티에 올려고 놓았고 사람들과 피드백을 주고 받을 계횝니다.

    - 부서 선택 이유, 다른 부서 배치는 괜찮은지
      네이버는 제가 꼭 일하고 싶은 회사였기때문에
      마음을 열어 놓겠지만 정확한 업무 내용을 봐야 결정할수 있을거 같습니다.

    - 좋아하는 과목, 좋아하는 기술?!
        저는 javascript를 좋아합니다. 그래서 지금 nodejs랑ractjs,react-native, mongodb를 활용한 앱을 개발중에 있습니다.

    - 웹시스템 동작흐름 파악
    DNS서버로 가서 ip주소 얻은후 연결 http 요청메시지 웹서버에 보내고 웹서버는 response http메시지를 보냄

    https://www.html5rocks.com/ko/tutorials/speed/high-performance-animations/

    - tcp 3-way hand shaking? http://mindnet.tistory.com/entry/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-22%ED%8E%B8-TCP-3-WayHandshake-4-WayHandshake

AMP Cache를 사용하면 웹 페이지의 모든 JavaScript 파일과 이미지 파일을 같은 출처(origin)에서 로딩할 수 있으며 HTTP 2.0의 장점을 최대한 살릴 수 있다.


    - 랜더링 과정(랜더링 엔진)
        로딩 : 리소스 스트림를 읽어온다.
        파싱 : html을 파싱하여 dom 트리를 만든다.
        css를 이용하여 rendering 트리를 만든다. display :None은 안함
        객체의 위치와 크기로 레이아웃을 잡고 마지막으로 페인팅 과정을 통해 렌더링이 마무리 된다.


    - Agile 방식 http://skmagic.tistory.com/entry/%EC%95%A0%EC%9E%90%EC%9D%BC-AGILE-%EA%B0%9C%EB%B0%9C-%EB%B0%A9%EB%B2%95
    http://blog.rightbrain.co.kr/?p=5810

    - RESTful API에 대해 설명
    http://meetup.toast.com/posts/92

     - angular 동작방법
     http://mobicon.tistory.com/270
     https://muckycode.blogspot.kr/2015/03/javascript-execution-context-scope.html
     http://davidshariff.com/blog/what-is-the-execution-context-in-javascript/

     의존성주입입

      CommonJS, AMD (Asyncronouse Module Definition)
      https://joshua1988.github.io/web_dev/javascript-pattern-design/

    - 자료구조(리스트, 스택, 큐)

     - 디자인패턴

     - 상속의 장단점

    - 시간복잡도 계산하기
    - 알고리즘

    - 손코딩(기본 스크립트 함수 외우기)
    - 일하는 노하우
    - 사용하는 언어, 그리고 객체지향 개념과 관련된 질문이 있었음

    - 클로져
    - 상속
    - 프로토타입



    - 쓰레드, 프로세스에 대한 설명
    - OOP의 의미와 장단점

    - 리팩토링에 관한 질문
    - 알고리즘(정렬)
    - 설계관련
    - 프로세스, 스레드, 메모리, vector/list, 퀵소트의 원리

    - STL List와 Vector의 차이점, 장단점(vector와 list의 차이점과 특징)
    - linked list와 map, hashmap의 특징
    - Linked List 를 뒤집는 의사코드 작성
    - Http 통신시 Post/Get 방식의 차이점
    - HTTP, HTTPS 차이점

    - Hash Table에 대한 설명.
    - Library와 DLL 사용시 차이점과 각각 사용시 장단점
    - 특정 Tree search 알고리즘에 대한 설명

    - rtp와 rtcp 차이점
    - string += operation 칠판에 구현





문제
    - 1000* 1000 셀에 한가지 셀에 1000가지 색이 들어 갈때 필요한 메모리의 양
    시간 복잡도 , 소트
    1차에서 간단한 알고리즘에 대해 물었습니다. 기억에 남는건 1~1000의 숫자중 중복 가능하게 1000개의 숫자를 뽑았을때, 이들 중 중간값을 묻는 문제였습니다.
    카운팅 소트
    - 문자열(String)과 관련된 간단한 코딩
    - 숫자 표시 문자열 -> 숫자 변환 알고리즘 작성
    중복되지 않는 수를 배열에서 출력하는 코드를 작성하라

    이진 트리에서 max depth를 구하는 코드를 작성하라

    100! = 100 * 99 * ... * 2 * 1 = xx…x00..0 = xx…x * 10^n
    이 때 n의 값은?
    나: (잠시 고민 후)곱해서 10이 만들어져야 0의 자리수가 늘어나니까 곱해지는 5의 개수랑 2의 개수를 세면 될 것 같다.
    1부터 100까지 5의 배수는 5, 10, 15, … 이니까 5*1, 5*2, …, 5*20이 되고, 20개가 있다.
    마찬가지로 2의 배수는 50개가 될 것이다.
    그러므로 0의 개수는 20개이다.

    면접관: 뭔가 빠뜨린게 있는 것 같다. 다시 한 번 생각해봐라.

    나: (열심히 생각 후) 아 그런데 단순히 2와 5의 배수 개수로 따지면 안되겠다. 5의 제곱의 경우에는 5를 두번 곱하는 것과 같은 효과가 있다. 25의 배수는 4개가 있으니까... 답은 24개이다.

    소팅 알고리즘 슈도코드로 구현할 때 변수를 사용하지 않고 해보라고 한 것...

    손코딩 문자열로된 숫자를 int형으로 바꾸는 로직

    개발 중에 일어났던 이슈와 해결 방법은 했던 방법으로 대답




    - 왜 이직을 하려고 하는가,
    - 왜 해당 언어를 사용하는가,
    - 이용하거나 알고있는 네이버 서비스에 대해 말해보시오,
    - 진행했던 프로젝트에 대한 설명과 질의응답 등
    - 어떤 것을 개발하고 싶은가?
    - 10년후 나의 모습(이를 위해 어떤 노력을 해왔고, 어떤 노력을 해갈것인가)
    - 왜 네이버에 오려고하고 이곳에 니가 원하던 모습이 존재하지 않으면 어떻게 할 것인가?
    - 작업 방식은 만들고 나서 돌아가는지 확인하는가? 아니면 설계 후에 만들기 시작하는가?
    - 최근 읽은 개발관련 문서가 있나요?
